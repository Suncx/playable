.page-header
  %h1
    = t('activerecord.models.' + resource_class.name.downcase)
    %small= t('admin.info.' + resource_class.name.downcase)
.well
  = link_to tt(resource_class.to_s), new_resource_url(),:class => 'btn large primary'
= render 'search'
.row
  .span16
    %table#sortTableExample.zebra-striped
      %thead
        %tr
          %th.blue= ta Post, :auth
          %th.blue= ta Post, :permalink
          %th.blue= ta Post, :category
          %th.blue= ta Post, :title
          %th.blue= ta Post, :content
          %th.blue= ta Post, :tag
          %th.blue= ta Post, :is_top
          %th.blue= ta Post, :comments
          %th.blue= ta Post, :created_at
          %th.yellow= t('admin.actions.default')
      %tbody
        - if collection.blank?
          %tr
            %td &nbsp;
            %td{:colspan => 9}= t('admin.meta.empty_data')
        - else
          - collection.each do |resource|
            %tr
              %td= link_to resource.user.username, admin_user_posts_path(resource.user)
              %td= resource.permalink
              %td= resource.category.name
              %td= resource.title
              %td= resource.content
              %td= resource.tags.map(&:name).join(',')
              %td= resource.is_top  
              %td= link_to resource.comments_count, admin_post_comments_path(resource)
              %td= resource.created_at.strftime("%Y-%m-%d %H:%I")
              %td
                = link_to t('admin.actions.show'), resource_path(resource), :class => 'btn'
                = link_to t('admin.actions.comment'), admin_post_comments_path(resource), :class => 'btn'
                = link_to t('admin.actions.edit'), edit_resource_path(resource), :class => 'btn'
                = link_to t('admin.actions.delete'), resource_path(resource), :method => :delete, :confirm => t('admin.meta.confirm'), :class => 'btn danger'
    = paginate collection
备忘录


class Report < ActiveRecord::Base
  belongs_to :user, :counter_cache => true
  
  scope :default_order, order('created_at DESC')
  scope :current_week,  where('created_at >= ?', Time.zone.now.beginning_of_week)
  scope :on_today,      where('created_at > ?', Time.zone.now.change(:hour => 0))
  
end


class Admin::PostsController < Admin::BaseController

	main_nav_highlight :posts
 	include_kindeditor
 
	protected
  
  def collection

    if params.key?(:user_id)
      @user = User.find(params[:user_id])
      @search = @user.post.search(params[:search])
    else
      @search ||= end_of_association_chain.search(params[:search])
    end
    @posts = @search.page(params[:page]) 

  end
end


= simple_form_for @report, :url => url do |f|
  = f.input :user_id,:as => :hidden,:input_html => { :value => current_user.id }
  = f.input :current_date, :as => :date, :start_year => Date.today.year ,:end_year => Date.today.year + 5, :discard_day => false,:order => [:year, :month, :day],:input_html => { :style => 'width:80px' }
  = f.input :plan, :input_html => { :style => 'width:200px;height:20px' }
  = f.input :content, :input_html => { :style => 'width:200px;height:120px' }
  = f.input :score
  .actions
    = f.button :submit, t('admin.actions.add'), :class => 'btn middle success'
